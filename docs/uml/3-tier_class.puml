@startuml 3-tier
hide empty members

skinparam class {
  BackgroundColor<<VL>> PeachPuff
  BackgroundColor<<LL>> DarkSeaGreen
  BackgroundColor<<DL>> LightBlue
  BackgroundColor<<API>> LightGray
}

package ViewLayer {
  Class Table {
    + data
    + headers
    + begin_line
    + begin_col
    + max_lines
    + numerate

    - add_columns()
    - pages_info()
    - getitem()
    - iter()
    + next_page()
    + previous_page()
    + first_page()
    + last_page()

  }
  Class TableColumn {
    + name
    + rows
    + max_lines
    + pages
    + current_page

    + get_width()
    + set_position()
  } 

  Table o-- TableColumn

  Class Form {
    + instance
    + form_fields
    + line
    + spacing

    - getitem()
    - iter()
  }
  Class FormField {
    + key
    + name
    + value
    + lines
    + cols
    + filter
    + editable
    + validators
    + options
    + border

    + get_lines()
    + set_position()
  } 

  Form o-- FormField

  Class Menu {
    + start_line
    + start_col
    + spacing
    + menu_items

    + add_menu_item()
    + get_options()
    - getitem()
    - iter()
  }
  Class MenuItem {
    + option
    + name
    + connection
    + role

    - str()
  }

  Menu o-- MenuItem

  Class MainProgram {
    - logged_in_user
    - llapi
  }
  Class ViewFrame <<VL>> {
    - screen: _CursesWindow
    - llapi
    - header_menu
    - foot_menu

    + print_view()
    - display_frame()
    - display_logo()
    - display_header()
    - display_footer()
    - display_logged_in_user()
    - display_divder_line()
    - draw_selections()
    - get_dividers()
  }
  Class LocationView <<VL>> {
    - screen
    - llapi

    - create_input_map()
    - view_location_handler()
    - list_all_handler()
    - new_location_handler()
    - save_location_handler()
    - edit_location_handler()
    - find_handler()
    - select_from_list_handler()
    - display_one_location()
    
  }
  Class BuildingView <<VL>> {
    - screen
    - llapi

    - create_input_map()
    - find_handler()
    - menu_handler()
    - list_all_handler()
    - select_from_list_handler()
    - get_id_handler()
    - view_handler()
    - display_one_building()
    - add_new_handler()
    - add_accessory_handler()
    - save_accessory_handler()
    - edit_handler()
    - save_handler()
    - filter_location_handler()
  }
  Class EmployeeView <<VL>> {
    - screen
    - llapi
 
    - create_input_map()
    - menu_handler()
    - view_employee_handler
    - filter_location_handler()
    - get_id_handler()
    - list_all_handler()
    - select_from_list_handler()
    - new_employee_handler()
    - edit_employee_handler()
    - save_employee_handler()
    - find_handler()
    - display_one_employee()
  }
  Class ContractorView <<VL>> {
    - screen
    - llapi

    - create_input_map
    - menu_handler()
    - list_all_handler()
    - select_from_list_handler()
    - select_for_report_handler()
    - view_handler()
    - display_one_contractor()
    - add_new_handler()
    - save_handler()
    - edit_handler()
    - rate_handler()
    - get_id_handler()
    - filter_location_handler()
  }
  Class TaskView <<VL>> {
    - screen
    - llapi

    - find_handler()
    - menu_handler()
    - list_all_handler()
    - select_from_list_handler()
    - view_handler()
    - add_new_handler()
    - assign_handler()
    - reject_handler()
    - complete_handler()
    - approve_handler()
    - save_handler()
    - edit_handler()
    - get_id_handler()
    - filter_my_active_handler()
    - filter_active_handler()
    - filter_completed_handler()
    - filter_location_handler()
    - filter_employee_handler()
    - filter_building_handler()
    - filter_contractor_handler()
  }
  Class SearchView <<VL>> {
    - screen
    - llapi

    - find_handler()
    - menu_handler()
    - emp_by_location_handler()
    - build_by_location_handler()
    - contractor_by_location_handler()
    - contractor_for_report_handler()
    - emp_by_id_handler()
    - build_by_id_handler()
    - task_by_id_handler()
    - task_by_building_handler()
    - task_by_emp_handler()
    - task_by_loc_handler()
    - task_by_contr_handler()
    - report_by_build_handler()
    - reort_by_emp_handler()
  }
  Class LoginView <<VL>> {
    - screen
    - llapi

    + display_view()
    + invalid_input_error()
    + user_not_found_error()
    + get_input()
  }
}
package LogicLayer {
  Class LLAPI <<API>> {
    - ALL BL CLASSES
    + ALL EXPOSED FUNCTIONS()
  }
  class LocationLogic <<LL>> {
    + new_location()
    + update_location()
    + get_location(id)
    + get_all_locations()
    + add_extras()

    - parse_form()
  }
  class BuildingLogic <<LL>> {
    + new_building()
    + update_building()
    + get_building(id)
    + get_all_buildings()
    + get_filtered_buildings(filter)
    + get_buildings_by_location()
    + add_extras()

    - parse_form()
  }
  class AccessoryLogic <<LL>> {
    + new_accessory()
    + update_accessory()
    + get_accessory(id)
    + get_all_accessories()
    + get_filtered_accessories()
    + update_maintainence()
    + add_extras()

    - parse_form()
  }
  class EmployeeLogic <<LL>> {
    + new_employee()
    + update_employee()
    + get_employee(id)
    + get_all_employees()
    + get_employee_by_location()
    + add_extras()

    - parse_form()
  }
  class ContractorLogic <<LL>> {
    + new_contractor()
    + update_contractor()
    + get_contractor(id)
    + get_all_contractors()
    + get_filtered_contractors(filter)
    + get_contractor_rating(id)
    + add_extras()

    - parse_form()
  }
  class TaskLogic <<LL>> {
    + new_task()
    + update_task()
    + get_task(id)
    + get_all_tasks()
    + get_filtered_tasks(filter)
    + get_task_for_employee()
    + get_task_for_building()
    + get_task_for_location()
    + get_task_for_contractor()
    + apply_filters()
    + update_task_property()
    + calculate_task_cost()
    + add_extras()

    - parse_form()
  }
  class ReportLogic <<LL>> {
    + new_employee_report()
    + new_contractor_report()
    + update_empoloyee_report()
    + update_contractor_report()
    + update_empoloyee_property()
    + update_contractor_property()
    + get_report(id)
    + get_all_reports()
    + get_filtered_reports(filter)
    + get_reports_for_task()
    + get_reports_for_employee()
    + get_reports_for_contractor()
    + get_reports_for_building()
    
    - add_employee_extras()
    - add_contractor_extras()
    - parse_emoployee_form()
    - parse_contractor_form()

  }
}

package DataLayer {
  Class DLAPI <<API>> {
    - ALL DL CLASSES
    + ALL EXPOSED FUNCTIONS()
  }
  class FileHandler <<DL>> {
    - readFile(file_handler)
    - writeFile(file_handler, data)
    - addLine(file_handler, data)
  }
  Class LocationData <<DL>> {
    - filename: string

    + add_location()
    + update_location()
    + delete_location()
    + get_all_locations()
    + get_one_location(id)
    + get_filtered_locations(filter)

    - parser()
    - get_next_id()
  }
  Class BuildingData <<DL>> {
    - filename: string
    
    + add_building()
    + update_building()
    + delete_building()
    + get_all_buildings()
    + get_one_building(id)
    + get_filtered_buildings(filter)
    
    - parse()
    - get_next_id()
  }
  Class AccessoryData <<DL>> {
    - filename: string
    
    + add_accessory()
    + update_accessory()
    + delete_accessory()
    + get_all_accessories()
    + get_one_accessory(id)
    + get_filtered_accessories(filter)

    - parse()
    - get_next_id()
  }
  Class EmployeeData <<DL>> {
    - filename: string
    
    + add_employee()
    + update_employee()
    + delete_employee()
    + get_all_employees()
    + get_one_employee(id)
    + get_filtered_employees(filter)

    - parse()
    - get_next_id()
  }
  Class ContractorData <<DL>> {
    - filename: string
    
    + add_contractor()
    + update_contractor()
    + delete_contractor()
    + get_all_contractors()
    + get_one_contractor(id)
    + get_filtered_contractors(filter)

    - parser()
    - get_next_id()
  }
  Class ContractorReportData <<DL>> {
    - filename: string
    
    + add_report()
    + update_report()
    + delete_report()
    + get_all_reports()
    + get_one_report(id)
    + get_filtered_reports(filter)

    - parse()
    - get_next_id()
  }
  Class EmployeeReportData <<DL>> {
    - filename: string
    
    + add_report()
    + update_report()
    + delete_report()
    + get_all_reports()
    + get_one_report(id)
    + get_filtered_reports(filter)

    - parse()
    - get_next_id()
  }
  Class TaskData <<DL>> {
    - filename: string
    
    + add_task()
    + update_task()
    + delete_task()
    + get_all_tasks()
    + get_one_task(id)
    + get_filtered_tasks(filter)

    - parse()
    - get_next_id()
  }
}

@enduml