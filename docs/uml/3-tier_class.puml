@startuml 3-tier
hide empty members

skinparam class {
  BackgroundColor<<UI>> PeachPuff
  BackgroundColor<<BL>> DarkSeaGreen
  BackgroundColor<<DL>> LightBlue
  BackgroundColor<<API>> LightGray
}

package UserInterface {
  Class MainProgram {
    - logged_in_user
  }
  Class ViewFrame <<UI>> {
    - curses
    - current_view
    - previous_view
    - available_inputs

    + get_input()
    + display_header()
    + display_footer()
  }
  Class LocationView <<UI>> {
    + menu()
    + view()
    + list_view()
    + form()
  }
  Class BuildingView <<UI>> {
    + menu()
    + view()
    + list_view()
    + form()
  }
  Class EmployeeView <<UI>> {
    + menu()
    + view()
    + list_view()
    + form()
  }
  Class ContractorView <<UI>> {
    + menu()
    + view()
    + list_view()
    + form()
  }
  Class TaskView <<UI>> {
    + menu()
    + view()
    + list_view()
    + form()
  }
  Class SearchView <<UI>> {
    + menu()
  }
  Class LoginView <<UI>> {
    + form()
  }
}
UserInterface .. BusinessLogic
BusinessLogic .. DataLogic
package BusinessLogic {
  Class BLAPI <<API>> {
    - ALL BL CLASSES
    + ALL EXPOSED FUNCTIONS()
  }
  class LocationLogic <<BL>> {
    + new_location()
    + update_location()
    + get_location(id)
    + get_all_locations()
    + add_employee_to_location()
  }
  class BuildingLogic <<BL>> {
    + new_building()
    + update_building()
    + get_building(id)
    + get_all_buildings()
    + get_filtered_buildings(filter)
    + add_accessory_to_building()
    + get_reports_for_building(filter)
  }
  class AccessoryLogic <<BL>> {
    + new_accessory()
    + update_accessory()
    + get_accessory(id)
    + get_all_accessories()
    + get_accessory_by_building(building_id)
  }
  class EmployeeLogic <<BL>> {
    + new_employee()
    + update_employee()
    + get_employee(id)
    + get_all_employees()
    + get_filtered_employees(filter)
    + get_reports_for_employee(filter)
  }
  class ContractorLogic <<BL>> {
    + new_contractor()
    + update_contractor()
    + get_contractor(id)
    + get_all_contractors()
    + get_filtered_contractors(filter)
    + get_contractor_rating(id)
    + get_reports_for_contractor(filter)
  }
  class TaskLogic <<BL>> {
    + new_task()
    + update_task()
    + get_task(id)
    + get_all_tasks()
    + get_filtered_tasks(filter)
    + add_report_to_task()
    + update_task_state()
    + calculate_task_cost()
  }
  class ReportLogic <<BL>> {
    + new_report()
    + update_report()
    + get_report(id)
    + get_all_reports()
    + get_filtered_reports(filter)
    + add_contractor_to_report()
  }
}

package DataLogic {
  Class DLAPI <<API>> {
    - ALL DL CLASSES
    + ALL EXPOSED FUNCTIONS()
  }
  class FileHandler <<DL>> {
    - openFile(method)
    - readFile(file_handler)
    - writeFile(file_handler, data)
    - updateFile(file_handler, data)
  }
  Class LocationFileHandler <<DL>> {
    - filename: string

    + add_location()
    + update_location()
    + delete_location()
    + get_all_locations()
    + get_one_location(id)
    + get_filtered_locations(filter)

    - prepare(data)
    - parser()
  }
  Class BuildingFileHandler <<DL>> {
    - filename: string
    
    + add_building()
    + update_building()
    + delete_building()
    + get_all_buildings()
    + get_one_building(id)
    + get_filtered_buildings(filter)

    - prepare(data)
    - parser()
  }
  Class AccessoryFileHandler <<DL>> {
    - filename: string
    
    + add_accessory()
    + update_accessory()
    + delete_accessory()
    + get_all_accessories()
    + get_one_accessory(id)
    + get_filtered_accessories(filter)

    - prepare(data)
    - parser()
  }
  Class EmployeeFileHandler <<DL>> {
    - filename: string
    
    + add_employee()
    + update_employee()
    + delete_employee()
    + get_all_employees()
    + get_one_employee(id)
    + get_filtered_employees(filter)

    - prepare(data)
    - parser()
  }
  Class ContractorFileHandler <<DL>> {
    - filename: string
    
    + add_contractor()
    + update_contractor()
    + delete_contractor()
    + get_all_contractors()
    + get_one_contractor(id)
    + get_filtered_contractors(filter)

    - prepare(data)
    - parser()
  }
  Class ReportFileHandler <<DL>> {
    - filename: string
    
    + add_report()
    + update_report()
    + delete_report()
    + get_all_reports()
    + get_one_report(id)
    + get_filtered_reports(filter)

    - prepare(data)
    - parser()
  }
  Class TaskFileHandler <<DL>> {
    - filename: string
    
    + add_task()
    + update_task()
    + delete_task()
    + get_all_tasks()
    + get_one_task(id)
    + get_filtered_tasks(filter)

    - prepare(data)
    - parser()
  }
}

@enduml